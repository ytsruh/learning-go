// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.680
package views

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import "context"
import "io"
import "bytes"

func Home() templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, templ_7745c5c3_W io.Writer) (templ_7745c5c3_Err error) {
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templ_7745c5c3_W.(*bytes.Buffer)
		if !templ_7745c5c3_IsBuffer {
			templ_7745c5c3_Buffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templ_7745c5c3_Buffer)
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Var2 := templ.ComponentFunc(func(ctx context.Context, templ_7745c5c3_W io.Writer) (templ_7745c5c3_Err error) {
			templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templ_7745c5c3_W.(*bytes.Buffer)
			if !templ_7745c5c3_IsBuffer {
				templ_7745c5c3_Buffer = templ.GetBuffer()
				defer templ.ReleaseBuffer(templ_7745c5c3_Buffer)
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<h1 class=\"text-xl py-2 text-center\">Hello World!</h1><h2 class=\"text-lg py-1 text-center\">Trying out Franken UI</h2><hr class=\"uk-divider-icon\"><div class=\"uk-alert\" uk-alert>This is an alert</div><hr class=\"uk-divider-icon\"><div class=\"flex flex-wrap gap-3\"><button class=\"uk-button uk-button-default mr-2\" type=\"button\" uk-toggle=\"target: #offcanvas-slide\">Open Side Nav</button></div><div id=\"offcanvas-slide\" uk-offcanvas=\"overlay: true\"><div class=\"uk-offcanvas-bar p-6\"><button class=\"uk-offcanvas-close\" type=\"button\" uk-close></button><h3>Title</h3><p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.</p></div></div><hr class=\"uk-divider-icon\"><div class=\"grid grid-cols-1 md:grid-cols-4 gap-3\"><div><div class=\"uk-card uk-card-default uk-card-body\"><h3 class=\"uk-card-title\">Default</h3><p>Lorem ipsum dolor sit amet, consectetur adipisicing elit.</p></div></div><div><div class=\"uk-card uk-card-primary uk-card-body\"><h3 class=\"uk-card-title\">Primary</h3><p>Lorem ipsum dolor sit amet, consectetur adipisicing elit.</p></div></div><div><div class=\"uk-card uk-card-secondary uk-card-body\"><h3 class=\"uk-card-title\">Secondary</h3><p>Lorem ipsum dolor sit amet, consectetur adipisicing elit.</p></div></div><div><div class=\"uk-card uk-card-danger uk-card-body\"><h3 class=\"uk-card-title\">Danger</h3><p>Lorem ipsum dolor sit amet, consectetur adipisicing elit.</p></div></div></div><hr class=\"uk-divider-icon\"><p class=\"flex flex-wrap gap-3\"><button class=\"uk-button uk-button-default\" type=\"button\" onclick=\"UIkit.notification({message: &#39;Top Left...&#39;, pos: &#39;top-left&#39;})\">Top Left</button> <button class=\"uk-button uk-button-default\" type=\"button\" onclick=\"UIkit.notification({message: &#39;Top Center...&#39;, pos: &#39;top-center&#39;})\">Top Center</button> <button class=\"uk-button uk-button-default\" type=\"button\" onclick=\"UIkit.notification({message: &#39;Top Right...&#39;, pos: &#39;top-right&#39;})\">Top Right</button> <button class=\"uk-button uk-button-default\" type=\"button\" onclick=\"UIkit.notification({message: &#39;Bottom Left...&#39;, pos: &#39;bottom-left&#39;})\">Bottom Left</button> <button class=\"uk-button uk-button-default\" type=\"button\" onclick=\"UIkit.notification({message: &#39;Bottom Center...&#39;, pos: &#39;bottom-center&#39;})\">Bottom Center</button> <button class=\"uk-button uk-button-default\" type=\"button\" onclick=\"UIkit.notification({message: &#39;Bottom Right...&#39;, pos: &#39;bottom-right&#39;})\">Bottom Right</button></p><hr class=\"uk-divider-icon\"><ul class=\"grid grid-cols-2 md:grid-cols-4 gap-3\" uk-sortable=\"handle: .uk-card\"><li><div class=\"uk-card uk-card-default uk-card-body uk-text-center\">Item 1</div></li><li><div class=\"uk-card uk-card-default uk-card-body uk-text-center\">Item 2</div></li><li><div class=\"uk-card uk-card-default uk-card-body uk-text-center\">Item 3</div></li><li><div class=\"uk-card uk-card-default uk-card-body uk-text-center\">Item 4</div></li><li><div class=\"uk-card uk-card-default uk-card-body uk-text-center\">Item 5</div></li><li><div class=\"uk-card uk-card-default uk-card-body uk-text-center\">Item 6</div></li><li><div class=\"uk-card uk-card-default uk-card-body uk-text-center\">Item 7</div></li><li><div class=\"uk-card uk-card-default uk-card-body uk-text-center\">Item 8</div></li></ul><hr class=\"uk-divider-icon\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			if !templ_7745c5c3_IsBuffer {
				_, templ_7745c5c3_Err = io.Copy(templ_7745c5c3_W, templ_7745c5c3_Buffer)
			}
			return templ_7745c5c3_Err
		})
		templ_7745c5c3_Err = template().Render(templ.WithChildren(ctx, templ_7745c5c3_Var2), templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if !templ_7745c5c3_IsBuffer {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteTo(templ_7745c5c3_W)
		}
		return templ_7745c5c3_Err
	})
}
